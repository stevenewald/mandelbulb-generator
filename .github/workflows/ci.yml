name: Continuous Integration

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Install clang-format
      run: pip install clang-format

    - name: Lint
      run: cmake -D FORMAT_COMMAND=clang-format -P cmake/lint.cmake

  build-native:
    needs: [lint]

    strategy:
      matrix:
        os: [macos-14, ubuntu-22.04, windows-2022]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install static analyzers
      if: matrix.os == 'ubuntu-22.04'
      run: >-
        sudo apt-get install clang-tidy-14 cppcheck -y -q

        sudo update-alternatives --install
        /usr/bin/clang-tidy clang-tidy
        /usr/bin/clang-tidy-14 140

    - name: Install Python
      uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Conan cache
      uses: actions/cache@v4
      with:
        path: conan_cache_save.tgz
        key: conan-${{ matrix.os }}-${{ hashFiles('conan*.[pl][yo]*') }}-native

    - name: Install dependencies
      shell: bash
      run: bash < .github/scripts/conan-ci-setup.sh

    - name: Setup MultiToolTask
      if: matrix.os == 'windows-2022'
      run: |
        Add-Content "$env:GITHUB_ENV" 'UseMultiToolTask=true'
        Add-Content "$env:GITHUB_ENV" 'EnforceProcessCountAcrossBuilds=true'

    - name: Configure
      shell: pwsh
      run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])" -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release -j

    - name: Install
      run: cmake --install build --config Release --prefix prefix

  build-emscripten:
    needs: [lint]

    strategy:
      matrix:
        os: [ubuntu-22.04]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install static analyzers
      run: >-
        sudo apt-get install clang-tidy-14 cppcheck -y -q

        sudo update-alternatives --install
        /usr/bin/clang-tidy clang-tidy
        /usr/bin/clang-tidy-14 140

    - name: Install Python
      uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Conan cache
      uses: actions/cache@v4
      with:
        path: conan_cache_save.tgz
        key: conan-${{ matrix.os }}-${{ hashFiles('conan*.[pl][yo]*') }}-emscripten

    - name: Install dependencies
      shell: bash
      run: bash < .github/scripts/conan-ci-emscripten-setup.sh

    - name: Configure
      shell: pwsh
      run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])" -DCMAKE_BUILD_TYPE=Release 

    - name: Build
      run: cmake --build build --config Release -j
